#st_por
str(st_por)
dim(st_por)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Checking the column names
colnames(st_mat)
colnames(st_por)
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(st_mat, st_por,  by = join_by, suffix = c(".math", ".por"))
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
st_mat <- read.table(file = "student-mat.csv", sep="/", header=TRUE)
st_por <- read.table(file = "student-por.csv", sep="/", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(st_mat)
dim(st_mat)
#It is a data frame with 395 observations of one variable
#st_por
str(st_por)
dim(st_por)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Checking the column names
colnames(st_mat)
colnames(st_por)
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(st_mat, st_por,  by = join_by, suffix = c(".math", ".por"))
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep="/", header=TRUE)
por <- read.table(file = "student-por.csv", sep="/", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Checking the column names
colnames(math)
colnames(por)
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep=";", header=TRUE)
por <- read.table(file = "student-por.csv", sep=";", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
str(mat_por)
dim(mat_por)
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep=";", header=TRUE)
por <- read.table(file = "student-por.csv", sep=";", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
#Little bit of exploring
str(mat_por)
dim(mat_por)
#It is a data frame with 382 observations and 53 variables
# Creating a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# Dealing with the dublicates
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
#Creating alc_use and high_use columns
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
#Checking the data with Glimpse
glimpse(alc)
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep=";", header=TRUE)
por <- read.table(file = "student-por.csv", sep=";", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
#Little bit of exploring
str(mat_por)
dim(mat_por)
#It is a data frame with 382 observations and 53 variables
# Creating a new data frame with only the joined columns
alc <- select(mat_por, one_of(join_by))
# Dealing with the dublicates
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
#Creating alc_use and high_use columns
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
#Checking the data with Glimpse
glimpse(alc)
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep=";", header=TRUE)
por <- read.table(file = "student-por.csv", sep=";", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
#Little bit of exploring
str(mat_por)
dim(mat_por)
#It is a data frame with 382 observations and 53 variables
# Creating a new data frame with only the joined columns
alc <- select(mat_por, one_of(join_by))
# Dealing with the dublicates
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(mat_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
#Creating alc_use and high_use columns
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
#Checking the data with Glimpse
glimpse(alc)
#Minna Peralampi
#7.2.2017
#Joining two datasets together.
#Dataset credits:
#Using Data Mining To Predict Secondary School Student Alcohol Consumption.
#Fabio Pagnotta, Hossain Mohammad Amran
#Department of Computer Science,University of Camerino
# Getting access to a useful library
library(dplyr)
#Reading the datasets to R
math <- read.table(file = "student-mat.csv", sep=";", header=TRUE)
por <- read.table(file = "student-por.csv", sep=";", header=TRUE)
#Exploring the structure and dimensions of the data
#st_mat
str(math)
dim(por)
colnames(math)
#It is a data frame with 395 observations of one variable
#st_por
str(por)
dim(por)
colnames(math)
#It is a data frame with 649 observations and 1 variable
#Joining the two datasets with 13 diffrent variables
#Making a vector with wanted variables
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
#Joining the st_por and st_mat to a mat_por dataset
mat_por <- inner_join(math, por,  by = join_by, suffix = c(".math", ".por"))
#Little bit of exploring
str(mat_por)
dim(mat_por)
#It is a data frame with 382 observations and 53 variables
# Creating a new data frame with only the joined columns
alc <- select(mat_por, one_of(join_by))
# Dealing with the dublicates
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(mat_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
#Creating alc_use and high_use columns
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
#Checking the data with Glimpse
glimpse(alc)
#Observations: 382
#Variables: 35
write.csv(alc, file = "alc", row.names = F)
alc <- read.csv("alc")
colnames(alc)
library(GGally)
library(ggplot2)
p <- ggpairs(alc, mapping = aes(color = gender), lower = list(combo = wrap("facethist", bins = 20)))
print(p)
p <- ggpairs(alc, mapping = aes(color = gender), lower = list(combo = wrap("facethist", bins = 20)))
print(p)
p <- ggpairs(alc, mapping = aes(color = sex), lower = list(combo = wrap("facethist", bins = 20)))
print(p)
# access the tidyverse libraries dplyr and ggplot2
library(dplyr); library(ggplot2)
# produce summary statistics by group
alc %>% group_by(sex, high_use) %>%  summarise(count = n(), mean_grade = mean(G3))
#### Graphical summary of the data
# access the tidyverse libraries dplyr and ggplot2
library(dplyr); library(ggplot2)
# produce summary statistics by group
alc %>% group_by(sex, high_use) %>%  summarise(count = n(), mean_grade = mean(G3))
library(ggplot2)
# initialize a plot of high_use and G3
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
# define the plot as a boxplot and draw it
g1 + geom_boxplot() + ylab("grade")
# initialise a plot of high_use and absences
g2 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
# define the plot as a boxplot and draw it
g2 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
summary(alc)
plot(alc)
m <- glm(high_use ~ Medu + interner + famsize+nursery, data = alc)
summary(m)
m <- glm(high_use ~ Medu + internet + famsize+nursery, data = alc)
summary(m)
m <- glm(high_use ~ Mjob + Pstatus + reason +nursery, data = alc)
summary(m)
m <- glm(high_use ~ romantic + failures + freetime + age , data = alc)
summary(m)
##### Making model of these
m <- glm(high_use ~ famrel + failures + freetime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + failures + traveltime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + health + traveltime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + activities+ traveltime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + famsup+ traveltime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + sex + traveltime + goout , data = alc)
summary(m)
m <- glm(high_use ~ famrel + sex + address + goout , data = alc)
summary(m
m <- glm(high_use ~ famrel + sex + address + goout , data = alc)
summary(m)
p <- ggpairs(m, mapping = aes(color = gender), lower = list(combo = wrap("facethist", bins = 20)))
print(p)
glimpse(alc)
boxplot(address)
649
?boxplot
boxplot(address)
boxplot(alc$address)
boxplot(alc$famrel, 5)
# access the tidyverse libraries tidyr, dplyr, ggplot2
library(tidyr); library(dplyr); library(ggplot2)
# glimpse at the alc data
glimpse(alc)
# use gather() to gather columns into key-value pairs and then glimpse() at the resulting data
gather(alc) %>% c("famrel", "sex", "address", "goout")
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(tidyr); library(dplyr); library(ggplot2)
# glimpse at the alc data
glimpse(alc)
# use gather() to gather columns into key-value pairs and then glimpse() at the resulting data
gather(alc) %>% glimpse
# draw a bar plot of each variable
gather(alc)
library(tidyr)
library(dplyr)
library(ggplot2)
install.packages("tidyr")
library(tidyr)
library(dplyr)
library(ggplot2)
# glimpse at the alc data
glimpse(alc)
# use gather() to gather columns into key-value pairs and then glimpse() at the resulting data
gather(alc) %>% glimpse
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
getwd()
setwd("C:/Users/Minna/Documents/GitHub/IODS-project")
#Logistic regression
library(ggplot2)
####Reading the data
alc <- read.csv("alc")
colnames(alc)
#### Summary of the data
##### The data is about variables that possibly affect the alcohol usage of the students int portugese and matchematics course.
![Variables](alc_variables.png)
##### More info about the variables is in <https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION>
#### Four variables and the hypothesis of their relatioship with alcohol consumption
##### Variables:
1. Family relationships (famrel, 1-5)
- Better family relationships decrease alcohol consumption
2. Sex, (sex, F/M)
- Males drink more tha females
3. Address (address, urban/rural)
- Urban living decreases alcohol consumption
4.Going out (goout, 1-5)
- Going out increases alcohol consumption
library(tidyr)
library(dplyr)
library(ggplot2)
# glimpse at the alc data
glimpse(alc)
# use gather() to gather columns into key-value pairs and then glimpse() at the resulting data
gather(alc) %>% glimpse
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
g2 <- ggplot(alc, aes(x = famrel, y = high_use, col = sex))
g2 <- ggplot(alc, aes(x = famrel, y = high_use, col = sex))
print(g2)
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
print(g2)
g2 + geom_boxplot() + ylab("Family relationships) + ggtitle("Student absences by alcohol consumption and sex")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships) + ggtitle("Student absences by alcohol consumption and sex")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships) + ggtitle("High use of alcohol")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships)
m
smlkdmslk
-
)
))))
library(tidyr)
library(dplyr)
library(ggplot2)
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships) + ggtitle("Family relationships by high use of alcohol")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships"") + ggtitle("Family relationships by high use of alcohol")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + geom_boxplot() + ylab("Family relationships") + ggtitle("Family relationships by high use of alcohol")
library(tidyr)
library(dplyr)
library(ggplot2)
g2 <- ggplot(alc, aes(x = high_use, y = goout, col = sex))
g2 + geom_boxplot() + ylab("Family relationships") + ggtitle("Family relationships by high use of alcohol")
library(tidyr)
library(dplyr)
library(ggplot2)
g2 <- ggplot(alc, aes(x = high_use, y = goout, col = sex))
g2 + geom_boxplot() + ylab("Going out") + ggtitle("Going out by high use of alcohol")
g2 <- ggplot(alc, aes(x = high_use, y = goout, col = sex))
g2 + geom_boxplot() + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex
g2 <- ggplot(alc, aes(x = high_use, y = goout, col = sex))
g2 + geom_boxplot() + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
g2 <- ggplot(alc, aes(x = high_use, y = goout, col = sex))
g2 + geom_boxplot() + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
library(tidyr)
library(dplyr)
library(ggplot2)
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + barplot() + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
?barplot
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + barplot(height=famrel) + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + barplot(height=10) + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g2 + barplot(height=100) + ylab("Going out") + ggtitle("Going out by high use of alcohol and sex")
g2 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
barplot(g2)
barplot(height = c(high_use, famrel))

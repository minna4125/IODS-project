# Week 2
####Reading the data to students2014
students2014 <- read.csv("learning2014.csv")
####Getting a simple overview of the data
head(students2014)
str(students2014)
####We can now see that there is 7 varaiables and 166 observations.
#####The variables are:
1. (*gender*) Gender, male (M) or female (F).
2. (*age*) Age, in years.
3. (*attitude*) Attitude towards statistics.
4. (*deep*) Deep learning, measured by avergagen serie of questions.
5. (*stra*) Strategic learning, measured by averagagen serie of questions.
6. (*surf*) Surface learning, measured by averagagen serie of questions.
7. (*points*) Exam points.
You can get more info of the questions asked in <http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-meta.txt>
#### Getting the graphical owerlook of the data
#####Getting an access to the useful libraries
library(GGally)
library(ggplot2)
#####Making the plot of the data, and separating genders with colors (M = blue, F = pink)
plot <- ggpairs(learning2014, mapping = aes(color = gender, alpha= 0.3), lower =list(combo = wrap("facethist", bins = 20)))
plot <- ggpairs(learning2014, mapping = aes(color = gender, alpha= 0.3), lower =list(combo = wrap("facethist", bins = 20)))
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.3), lower =list(combo = wrap("facethist", bins = 20)))
students2014 <- read.csv("learning2014.csv")
students2014 <- read.csv("learning2014")
# Minna Perälampi
# 27.1.2017
# RStudio Exercise 2 for IODS
# 2 Getting familiar with the structure and dimensions of the data
# Reading the data from the website to "lrn2014"
lrn2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# getting access to the useful dplyr library
library(dplyr)
# Exploring the structure of the data
str(lrn2014)
#Exploring the dimensions of learning2014
dim(lrn2014)
#Structure of the data is a data frame with 183 observations and 60 variables.
# LISÄÄÄÄÄÄÄÄ
#3 Creating an analysis dataset with variables:
#   -gender, Age, Attitude, deep, stra, surf and Points
#   Making deep, stra and surf variables
#Combining the questions(q=questions)
deep_q <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_q <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_q <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#Creating columns "deep", "surf", and "stra" by averaging (c=columns)
#deep
deep_c <- select(lrn2014, one_of(deep_q))
lrn2014$deep <- rowMeans(deep_c)
#surf
surface_c <- select(lrn2014, one_of(surface_q))
lrn2014$surf <- rowMeans(surface_c)
#stra
strategic_c <- select(lrn2014, one_of(strategic_q))
lrn2014$stra <- rowMeans(strategic_c)
# Making the vector with wanted variables.
w_variables <- c("gender", "Age", "Attitude", "deep", "stra" ,"surf", "Points")
# Making the dataset (learning2014) we want with wanted_variables vector
learning2014 <- select(lrn2014, one_of(w_variables))
#Getting rid of the CAPITAL letters in some variables
#Finding those things
colnames(learning2014)
#Renaming them
colnames(learning2014)[2] <- "age"
colnames(learning2014)[3] <- "attitude"
colnames(learning2014)[7] <- "points"
#Excluding the zeroes
learning2014 <- filter(learning2014, points > 0)
#Cheking that the dimensions are right
dim(learning2014)
#Dimensions are right(166, 7)
# 4 Saving the dataset "learning2014" to csv file
write.csv(learning2014, file = "learning2014.csv", row.names=FALSE)
#Demonstrating that it is still usable
check_lrn14 <- read.csv("learning2014.csv")
#Checking that the data is right
str(check_lrn14)
head(check_lrn14)
students2014 <- read.csv("learning2014.csv")
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.3), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1), lower =list(combo = wrap("facethist", bins = 20)), corSize = 10)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1, corSize = 10), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1, size = 10), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1, size = 3), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1, size = 0.5), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
plot <- ggpairs(students2014, mapping = aes(color = gender, alpha= 0.1), lower =list(combo = wrap("facethist", bins = 20)))
print(plot)
my_model <- lm(points ~ attitude + stra + surf, data = students2014)
print(my_model)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
plot(my_model, which = c(1, 2, 5), par(mfrow = c(2,2)))
plot <- ggpairs(learning2014, lower = list(combo = wrap("facethist", bins = 20)))
print(plot)
my_model <- lm(points ~ attitude + stra + surf, data = students2014)
plot(my_model, which = c(1, 2, 5), par(mfrow = c(2,2)))
summary(my_model)
table_of_the_summary <- summary(my_model)
print(table_of_the_summary)
plot(table_of_the_summary)
table(table_of_the_summary)
summary <- capture.output(summary(my_model))
print(summary)
plot(summary)
summary(my_model)
summary.formula(my_model)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
summary(my_model2)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(5,5)))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(1,1)))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
?summary
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)),2)
?plot
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), p)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), cex = 0.1)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), cex = 0.5)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), cex = 0.5)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), cex = 0.5)
plot(my_model2, which = c(1), par(mfrow = c(2,2)), cex = 0.5)
my_model2 <- lm(points ~ attitude + stra, data = students2014)
plot(my_model2, which = c(2), par(mfrow = c(2,2)), cex = 0.5)
plot(my_model2)
?plot
plot(my_model2, which = c(1,2,5), par(mfrow = c(2,2)), cex = 0.5, main = c("Residuals vs Fitted values", "Normal QQ-plot", "Residuals vs Leverage"))
?plot.lm
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), caption = list("Residuals vs Fitted values","Normal QQ-plot", "Residuals vs Leverage" ))
?plot.lm
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), main = "Residuals vs Fitted values", main = "Normal QQ-plot", main = "Residuals vs Leverage")
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), caption=list( "Residuals vs Fitted values", "Normal QQ-plot", "Residuals vs Leverage"), panel = if(add.smooth) panel.smooth else points)
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), caption=list( "Residuals vs Fitted values", "Normal QQ-plot", "Residuals vs Leverage"))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)), caption=list( "Residuals vs Fitted values", "Normal QQ-plot",NA, NA, "Residuals vs Leverage", NA))
plot(my_model2, which = c(1, 2, 5), par(mfrow = c(2,2)))
plot(my_model2, which = 1, par(mfrow = c(2,2)))
plot(my_model2, which = 1, par(mfrow = c(2,2)), main = Residuals vs Fitted values)
plot(my_model2, which = 2, par(mfrow = c(2,2)), main = Normal QQ-plot)
plot(my_model2, which = 5, par(mfrow = c(2,2)), main = Residuals vs Leverage)
plot(my_model2, which = 1, par(mfrow = c(2,2)), main = "Residuals vs Fitted" values)
plot(my_model2, which = 2, par(mfrow = c(2,2)), main = "Normal QQ-plot")
plot(my_model2, which = 5, par(mfrow = c(2,2)), main = "Residuals vs Leverage")
plot(my_model2, which = 1, par(mfrow = c(2,2)), main = "Residuals vs Fitted values")
plot(my_model2, which = 2, par(mfrow = c(2,2)), main = "Normal QQ-plot")
plot(my_model2, which = 5, par(mfrow = c(2,2)), main = "Residuals vs Leverage")
?rsquared
?Rsquare
?Rsquare
??Rsquare
?summary
